{
  "stats": {
    "suites": 12,
    "tests": 22,
    "passes": 17,
    "pending": 5,
    "failures": 0,
    "start": "2025-01-31T05:21:24.905Z",
    "end": "2025-01-31T05:21:30.977Z",
    "duration": 6072,
    "testsRegistered": 22,
    "passPercent": 100,
    "pendingPercent": 22.727272727272727,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5d0af574-e677-4224-ba9f-dd6a602cc97b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
          "title": "Counter App",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\counter.test.js",
          "file": "\\test\\counter.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Counter App\"",
              "fullTitle": "Counter App \"before each\" hook in \"Counter App\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "counterApp.reset();",
              "err": {},
              "uuid": "9885e63e-754a-4a68-b2df-865d52bf9287",
              "parentUUID": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should start at 0",
              "fullTitle": "Counter App should start at 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = counterApp.getValue();\nassert.strictEqual(value, 0)",
              "err": {},
              "uuid": "fca0e8b0-e6b6-448d-85d7-fa61a30dfc4f",
              "parentUUID": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should increment the counter",
              "fullTitle": "Counter App should increment the counter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "counterApp.increment()\nconst value = counterApp.getValue();\nassert.strictEqual(value, 1)",
              "err": {},
              "uuid": "2257d536-b397-4e42-a889-9b075f69e102",
              "parentUUID": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should decrement the counter",
              "fullTitle": "Counter App should decrement the counter",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "bc209b59-7640-47ba-bb24-fe4e4bb41eac",
              "parentUUID": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reset the counter",
              "fullTitle": "Counter App should reset the counter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "counterApp.increment()\ncounterApp.increment()\ncounterApp.reset()\nconst value = counterApp.getValue();\nassert.strictEqual(value, 0)",
              "err": {},
              "uuid": "e0ef9233-0316-4b76-83a0-32994234a5a6",
              "parentUUID": "ec435c0e-a129-414c-a44d-5f9f79eb5d9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fca0e8b0-e6b6-448d-85d7-fa61a30dfc4f",
            "2257d536-b397-4e42-a889-9b075f69e102",
            "e0ef9233-0316-4b76-83a0-32994234a5a6"
          ],
          "failures": [],
          "pending": [
            "bc209b59-7640-47ba-bb24-fe4e4bb41eac"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3843b7d3-e6f3-47de-a938-d34f024a7034",
          "title": "E-Commerce App",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\ecommerce.test.js",
          "file": "\\test\\ecommerce.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4ece825a-cd6f-463c-9624-799c28e25dad",
              "title": "Product management",
              "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\ecommerce.test.js",
              "file": "\\test\\ecommerce.test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Product management\"",
                  "fullTitle": "E-Commerce App Product management \"before each\" hook in \"Product management\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Clear the product list before each test\necommerceApp.getProducts().length = 0",
                  "err": {},
                  "uuid": "f1fae702-34c6-4700-995c-6671954edbba",
                  "parentUUID": "4ece825a-cd6f-463c-9624-799c28e25dad",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add a product",
                  "fullTitle": "E-Commerce App Product management should add a product",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product = {name: 'Laptop', price: 1000};\nconst result = ecommerceApp.addProduct(product);\nassert.deepStrictEqual(result, product, \"Product wat not added correctly\")",
                  "err": {},
                  "uuid": "0fa7a743-d6a5-43b2-80f4-d79abf524228",
                  "parentUUID": "4ece825a-cd6f-463c-9624-799c28e25dad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should retrieve all products",
                  "fullTitle": "E-Commerce App Product management should retrieve all products",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product1 = {name: 'Laptop', price: 1000};\nconst product2 = {name: 'Phone', price: 500};\necommerceApp.addProduct(product1)\necommerceApp.addProduct(product2)\nconst result = ecommerceApp.getProducts()\nassert.deepStrictEqual(result, [product1, product2], 'Products list is incorrect')",
                  "err": {},
                  "uuid": "c2732837-cd24-4150-a802-3b0b188331fb",
                  "parentUUID": "4ece825a-cd6f-463c-9624-799c28e25dad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if product lacks name or price",
                  "fullTitle": "E-Commerce App Product management should throw an error if product lacks name or price",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(\n                ()=> ecommerceApp.addProduct({price: 1000}),\n                /Product must have a name and price/\n            )",
                  "err": {},
                  "uuid": "a4691593-37a8-46ce-a9b6-928203c47622",
                  "parentUUID": "4ece825a-cd6f-463c-9624-799c28e25dad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0fa7a743-d6a5-43b2-80f4-d79abf524228",
                "c2732837-cd24-4150-a802-3b0b188331fb",
                "a4691593-37a8-46ce-a9b6-928203c47622"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "20828821-a7f9-401c-b243-8e7ff449e610",
              "title": "Cart Management",
              "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\ecommerce.test.js",
              "file": "\\test\\ecommerce.test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Cart Management\"",
                  "fullTitle": "E-Commerce App Cart Management \"before each\" hook in \"Cart Management\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Clear the cart before each test\necommerceApp.getCart().length =0",
                  "err": {},
                  "uuid": "00529229-b4c8-4cb9-a065-0791e1412f5c",
                  "parentUUID": "20828821-a7f9-401c-b243-8e7ff449e610",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add a product to the cart",
                  "fullTitle": "E-Commerce App Cart Management should add a product to the cart",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "ecommerceApp.addToCart(product)\nconst result = ecommerceApp.getCart();\nassert.deepStrictEqual(result, [product], 'Product was not added to the cart')",
                  "err": {},
                  "uuid": "72e534ef-591e-48b4-b32c-e393911c5805",
                  "parentUUID": "20828821-a7f9-401c-b243-8e7ff449e610",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove a product from the cart",
                  "fullTitle": "E-Commerce App Cart Management should remove a product from the cart",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "ecommerceApp.addToCart(product)\necommerceApp.removeFromCart(product.name)\nconst result = ecommerceApp.getCart();\nassert.deepStrictEqual(result, [], 'Product was not removed from the cart')",
                  "err": {},
                  "uuid": "cf5720f1-d09a-4f71-9d87-6f1a27ba01ae",
                  "parentUUID": "20828821-a7f9-401c-b243-8e7ff449e610",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if trying to remove a non-existent product",
                  "fullTitle": "E-Commerce App Cart Management should throw an error if trying to remove a non-existent product",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(\n    ()=> ecommerceApp.removeFromCart('InvalidName'),\n    /Product not found in the cart/\n)",
                  "err": {},
                  "uuid": "84f3b953-2aa7-47b8-acd2-454045b55da7",
                  "parentUUID": "20828821-a7f9-401c-b243-8e7ff449e610",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72e534ef-591e-48b4-b32c-e393911c5805",
                "cf5720f1-d09a-4f71-9d87-6f1a27ba01ae",
                "84f3b953-2aa7-47b8-acd2-454045b55da7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cff26177-925b-448a-a95d-e43fed3d5b9a",
          "title": "Math Operations - Set 1",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\math-set1.test.js",
          "file": "\\test\\math-set1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should subtract two numbers",
              "fullTitle": "Math Operations - Set 1 should subtract two numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = mathOperations.add(2, 3)\nassert.strictEqual(result, 5)",
              "err": {},
              "uuid": "262beb0e-8a02-4105-9f01-255daa40a56e",
              "parentUUID": "cff26177-925b-448a-a95d-e43fed3d5b9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add two numbers after a delay",
              "fullTitle": "Math Operations - Set 1 should add two numbers after a delay",
              "timedOut": false,
              "duration": 1011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await mathOperations.slowAdd(3, 4, 1000)\nassert.strictEqual(result, 7)",
              "err": {},
              "uuid": "2572f1e2-9fe6-439d-ad23-6a0cf7f0a214",
              "parentUUID": "cff26177-925b-448a-a95d-e43fed3d5b9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "262beb0e-8a02-4105-9f01-255daa40a56e",
            "2572f1e2-9fe6-439d-ad23-6a0cf7f0a214"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28581b57-f2c4-4785-831f-ee2faa48c3f2",
          "title": "Math Operations - Set 2",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\math.set2.test.js",
          "file": "\\test\\math.set2.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should subtract two numbers",
              "fullTitle": "Math Operations - Set 2 should subtract two numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = mathOperations.add(2, 3)\nassert.strictEqual(result, 5)",
              "err": {},
              "uuid": "520b8e06-926a-4b3a-8d22-759124fea9f1",
              "parentUUID": "28581b57-f2c4-4785-831f-ee2faa48c3f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add two numbers after a delay",
              "fullTitle": "Math Operations - Set 2 should add two numbers after a delay",
              "timedOut": false,
              "duration": 2000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await mathOperations.slowAdd(3, 4, 2000)\nassert.strictEqual(result, 7)",
              "err": {},
              "uuid": "ae851ec3-1934-4b3a-8eda-ceea6dd14b90",
              "parentUUID": "28581b57-f2c4-4785-831f-ee2faa48c3f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "520b8e06-926a-4b3a-8d22-759124fea9f1",
            "ae851ec3-1934-4b3a-8eda-ceea6dd14b90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2000,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "32d64fc5-694f-4f7e-99f7-3b7218cb6da4",
          "title": "Math Operations",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\mathOperations.test.js",
          "file": "\\test\\mathOperations.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7bae6636-e210-4d96-8b94-0498df4c0bb0",
              "title": "Synchronous operations",
              "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\mathOperations.test.js",
              "file": "\\test\\mathOperations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should multiply the values",
                  "fullTitle": "Math Operations Synchronous operations should multiply the values",
                  "timedOut": false,
                  "duration": 1027,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let result =1;\nfor(let i=1;i<1000000000; i++){\n    result =mathOperations.multiply(i, result)\n}\n// console.log(result)",
                  "err": {},
                  "uuid": "7f4caaff-9a31-4a64-82bd-be40a987c27b",
                  "parentUUID": "7bae6636-e210-4d96-8b94-0498df4c0bb0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f4caaff-9a31-4a64-82bd-be40a987c27b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1027,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "28fcfd5e-cd45-494b-8ddc-1ca0aef97c0b",
              "title": "Asynchronous Operations",
              "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\mathOperations.test.js",
              "file": "\\test\\mathOperations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add two numbers afer a delay",
                  "fullTitle": "Math Operations Asynchronous Operations should add two numbers afer a delay",
                  "timedOut": false,
                  "duration": 2002,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await mathOperations.slowAdd(100, 200, 2000)\nassert.strictEqual(result, 300)",
                  "err": {},
                  "uuid": "9f285e66-a875-4d1b-9578-473650c0cb1c",
                  "parentUUID": "28fcfd5e-cd45-494b-8ddc-1ca0aef97c0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should fail if operation takes too long",
                  "fullTitle": "Math Operations Asynchronous Operations should fail if operation takes too long",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "e1d3c146-a2bd-487e-beca-f3421dbe0335",
                  "parentUUID": "28fcfd5e-cd45-494b-8ddc-1ca0aef97c0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f285e66-a875-4d1b-9578-473650c0cb1c"
              ],
              "failures": [],
              "pending": [
                "e1d3c146-a2bd-487e-beca-f3421dbe0335"
              ],
              "skipped": [],
              "duration": 2002,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "80a272ce-3bd7-4680-925e-fd8d62c6ab60",
              "title": "Flaky Operations",
              "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\mathOperations.test.js",
              "file": "\\test\\mathOperations.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should pass on retry if flaky options succeeds",
                  "fullTitle": "Math Operations Flaky Operations should pass on retry if flaky options succeeds",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await mathOperations.flakyOperation();\nassert.strictEqual(result, 'Success!')",
                  "err": {},
                  "uuid": "3aca57d0-a891-4fb4-84f5-d13159eb72ab",
                  "parentUUID": "80a272ce-3bd7-4680-925e-fd8d62c6ab60",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3aca57d0-a891-4fb4-84f5-d13159eb72ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4787a1ac-d2d1-4445-905e-3c0c1114bf01",
          "title": "Retries Demonstration",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\retries.test.js",
          "file": "\\test\\retries.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass on the third attempt",
              "fullTitle": "Retries Demonstration should pass on the third attempt",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.retries(2)\nattempt ++;\nconsole.log(`Attempt ${attempt}`)\nassert.strictEqual(attempt, 3)",
              "err": {},
              "uuid": "23203dda-f35e-48de-864c-78574adb13fd",
              "parentUUID": "4787a1ac-d2d1-4445-905e-3c0c1114bf01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23203dda-f35e-48de-864c-78574adb13fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe641966-1dda-4942-8839-7ba631570693",
          "title": "Timeout Demonstration",
          "fullFile": "D:\\213081-Cypress\\09-Mocha-Chai-Demos\\mocha-advanced\\test\\timeout.test.js",
          "file": "\\test\\timeout.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass within the default timout",
              "fullTitle": "Timeout Demonstration should pass within the default timout",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ca468fa9-4b45-4282-a372-327f576485c1",
              "parentUUID": "fe641966-1dda-4942-8839-7ba631570693",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail if it execeeds the suite timeout",
              "fullTitle": "Timeout Demonstration should fail if it execeeds the suite timeout",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "cf9e100e-8f10-4af2-b8a5-cc0a0d35e9dd",
              "parentUUID": "fe641966-1dda-4942-8839-7ba631570693",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should pass with an extended timeout",
              "fullTitle": "Timeout Demonstration should pass with an extended timeout",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "de7e0df7-5ba5-4b96-890e-1398ef54c878",
              "parentUUID": "fe641966-1dda-4942-8839-7ba631570693",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "ca468fa9-4b45-4282-a372-327f576485c1",
            "cf9e100e-8f10-4af2-b8a5-cc0a0d35e9dd",
            "de7e0df7-5ba5-4b96-890e-1398ef54c878"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}